const User = require("../Models/User");

async function RegisterUser({ chat_id, fullname, group }) {
  try {
    let user = await User.findOne({ chatId: chat_id });

    if (!user) {
      user = new User({
        chatId: chat_id,
        fullname,
        group,
      });
      await user.save();
      console.log("‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", user);
      return {
        success: true,
        message: `‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user.fullname}!`,
        user,
      };
    } else {
      console.log("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:", user.chatId);
      return {
        success: false,
        message:
          `üëã –ü—Ä–∏–≤–µ—Ç, ${user.fullname}! ‚úÖ ${
            user.group ? `–∏–∑ –≥—Ä—É–ø–ø—ã ${user.group}` : ""
          }\n\n` +
          `üëâ –î–ª—è ${
            user.group ? "–∏–∑–º–µ–Ω–µ–Ω–∏—è" : "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
          } –≥—Ä—É–ø–ø—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n` +
          `${
            user.group
              ? "üëâ –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–∞—Ä—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é"
              : ""
          }`,
        user,
      };
    }
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", err);
    throw err;
  }
}

async function GetUser(chatId) {
  try {
    const user = await User.findOne({ chatId });
    return user;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err);
    throw err;
  }
}

async function SetGroup({ chatId, fullname, group }) {
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let user = await User.findOneAndUpdate(
      { chatId },
      { $set: { group } },
      { new: true }
    );

    if (!user) {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ
      user = new User({
        chatId,
        fullname,
        group,
      });
      await user.save();
      console.log("‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", user);
      return { success: true, message: "‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", user };
    } else {
      console.log("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:", user.chatId);
      return { success: false, message: "‚ÑπÔ∏è –ú—ã —É–∂–µ –∑–Ω–∞–∫–æ–º—ã", user };
    }
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã:", err);
    throw err;
  }
}

module.exports = { RegisterUser, SetGroup, GetUser };
